import{c as n}from"../../chunks/ssr.js";import"@tauri-apps/api/tauri";const t={code:"@keyframes svelte-1d595u9-aurora{0%{transform:translateY(0)}100%{transform:translateY(100%)}}.animate-aurora.svelte-1d595u9{animation:svelte-1d595u9-aurora 8s linear infinite}@keyframes svelte-1d595u9-pulse{0%,100%{opacity:0.4}50%{opacity:0.8}}.animate-pulse.svelte-1d595u9{animation:svelte-1d595u9-pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite}",map:'{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\nimport { fade, fly, scale } from \\"svelte/transition\\";\\nimport { quintOut, cubicOut } from \\"svelte/easing\\";\\nimport { invoke } from \\"@tauri-apps/api/tauri\\";\\nimport { slide } from \\"svelte/transition\\";\\nlet isScanning = false;\\nlet currentStep = 0;\\nlet scanComplete = false;\\nlet junkStats = null;\\nlet selectedCategory = null;\\nlet showReviewModal = false;\\nlet stepCompleted = [false];\\nlet isAnalyzing = false;\\nlet isCleanupScanning = false;\\nlet isProtectionScanning = false;\\nlet isPerformanceScanning = false;\\nlet isApplicationsScanning = false;\\nlet isClutterScanning = false;\\nlet showDeleteConfirmModal = false;\\nlet fileToDelete = null;\\nlet categoryToUpdate = null;\\nlet isDeleting = false;\\nlet deleteError = null;\\nlet deleteSuccess = false;\\nlet selectedFiles = /* @__PURE__ */ new Set();\\nfunction formatSize(bytes) {\\n  const sizes = [\\"Bytes\\", \\"KB\\", \\"MB\\", \\"GB\\", \\"TB\\"];\\n  if (bytes === 0) return \\"0 Byte\\";\\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\\n  return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + \\" \\" + sizes[i];\\n}\\nfunction truncatePath(path, maxLength = 60) {\\n  if (path.length <= maxLength) return path;\\n  const fileName = path.split(\\"/\\").pop() || path;\\n  const directory = path.slice(0, path.lastIndexOf(\\"/\\"));\\n  if (fileName.length > maxLength / 2) {\\n    return `.../${fileName.slice(0, maxLength / 2)}...${fileName.slice(-maxLength / 4)}`;\\n  }\\n  const half = Math.floor((maxLength - fileName.length - 5) / 2);\\n  return `${directory.slice(0, half)}.../${fileName}`;\\n}\\nconst steps = [\\n  {\\n    id: \\"cleanup\\",\\n    title: \\"System Cleanup\\",\\n    description: \\"...\\",\\n    subtext: \\"scanning...\\",\\n    icon: \\"\\\\u{1F9F9}\\",\\n    color: \\"from-emerald-400 to-emerald-600/50\\",\\n    categories: [\\n      {\\n        name: \\"Cache Files\\",\\n        description: \\"System and application cache files\\",\\n        icon: \\"\\\\u{1F4E6}\\"\\n      },\\n      {\\n        name: \\"Trash Files\\",\\n        description: \\"Files in your trash bin\\",\\n        icon: \\"\\\\u{1F5D1}\\\\uFE0F\\"\\n      },\\n      {\\n        name: \\"Old Downloads\\",\\n        description: \\"Downloads older than 7 days\\",\\n        icon: \\"\\\\u2B07\\\\uFE0F\\"\\n      },\\n      {\\n        name: \\"User Cache Files\\",\\n        description: \\"Application specific user cache files\\",\\n        icon: \\"\\\\u{1F464}\\"\\n      },\\n      {\\n        name: \\"System Cache Files\\",\\n        description: \\"System level cache files\\",\\n        icon: \\"\\\\u2699\\\\uFE0F\\"\\n      },\\n      {\\n        name: \\"Xcode Junk\\",\\n        description: \\"Unused Xcode files and caches\\",\\n        icon: \\"\\\\u{1F6E0}\\\\uFE0F\\"\\n      },\\n      {\\n        name: \\"Mail Downloads\\",\\n        description: \\"Temporary mail attachments and caches\\",\\n        icon: \\"\\\\u{1F4E7}\\"\\n      },\\n      {\\n        name: \\"Macintosh HD\\",\\n        description: \\"System storage cleanup\\",\\n        icon: \\"\\\\u{1F4BE}\\"\\n      },\\n      {\\n        name: \\"Broken Login Items\\",\\n        description: \\"Broken or outdated login items\\",\\n        icon: \\"\\\\u{1F511}\\"\\n      },\\n      {\\n        name: \\"Broken Preferences\\",\\n        description: \\"Corrupted or invalid preference files\\",\\n        icon: \\"\\\\u2699\\\\uFE0F\\"\\n      },\\n      {\\n        name: \\"User Log Files\\",\\n        description: \\"Application and system logs in user directory\\",\\n        icon: \\"\\\\u{1F4DD}\\"\\n      },\\n      {\\n        name: \\"System Log Files\\",\\n        description: \\"System-wide log files\\",\\n        icon: \\"\\\\u{1F4C4}\\"\\n      }\\n    ]\\n  },\\n  {\\n    id: \\"protection\\",\\n    title: \\"Protection\\",\\n    description: \\"...\\",\\n    subtext: \\"scanning...\\",\\n    icon: \\"\\\\u{1F6E1}\\\\uFE0F\\",\\n    color: \\"from-red-400 to-red-600/50\\",\\n    categories: [\\n      {\\n        name: \\"Generic.Trojan\\",\\n        description: \\"Common trojan threats and malware\\",\\n        icon: \\"\\\\u{1F9A0}\\"\\n      },\\n      {\\n        name: \\"OSX.WildPressure\\",\\n        description: \\"MacOS specific malware variant\\",\\n        icon: \\"\\\\u26A0\\\\uFE0F\\"\\n      },\\n      {\\n        name: \\"HiddenCode\\",\\n        description: \\"Concealed malicious code detection\\",\\n        icon: \\"\\\\u{1F50D}\\"\\n      },\\n      {\\n        name: \\"AdLoad\\",\\n        description: \\"Adware and unwanted software\\",\\n        icon: \\"\\\\u{1F6AB}\\"\\n      }\\n    ]\\n  },\\n  {\\n    id: \\"performance\\",\\n    title: \\"Performance\\",\\n    description: \\"...\\",\\n    subtext: \\"scanning...\\",\\n    icon: \\"\\\\u26A1\\",\\n    color: \\"from-blue-400 to-blue-600/50\\",\\n    categories: [\\n      {\\n        name: \\"Background Items\\",\\n        description: \\"Apps and services running in the background\\",\\n        icon: \\"\\\\u{1F504}\\"\\n      },\\n      {\\n        name: \\"Login Items\\",\\n        description: \\"Apps that start automatically at login\\",\\n        icon: \\"\\\\u{1F511}\\"\\n      }\\n    ]\\n  },\\n  {\\n    id: \\"applications\\",\\n    title: \\"Applications\\",\\n    description: \\"...\\",\\n    subtext: \\"scanning...\\",\\n    icon: \\"\\\\u{1F4F1}\\",\\n    color: \\"from-orange-400 to-orange-600/50\\",\\n    categories: [\\n      {\\n        name: \\"Updates Available\\",\\n        description: \\"Applications that need to be updated\\",\\n        icon: \\"\\\\u{1F504}\\"\\n      }\\n    ]\\n  },\\n  {\\n    id: \\"clutter\\",\\n    title: \\"My Clutter\\",\\n    description: \\"...\\",\\n    subtext: \\"scanning...\\",\\n    icon: \\"\\\\u{1F5C2}\\\\uFE0F\\",\\n    color: \\"from-pink-400 to-pink-600/50\\",\\n    categories: [\\n      {\\n        name: \\"Duplicate Downloads\\",\\n        description: \\"Tekrarlanan indirme dosyalar\\\\u0131\\",\\n        icon: \\"\\\\u{1F4E5}\\"\\n      }\\n    ]\\n  }\\n];\\nlet interval;\\nasync function startScan() {\\n  isScanning = true;\\n  isCleanupScanning = true;\\n  isProtectionScanning = true;\\n  isPerformanceScanning = true;\\n  isApplicationsScanning = true;\\n  isClutterScanning = true;\\n  currentStep = 0;\\n  stepCompleted = [false];\\n  invoke(\\"scan_junk_files\\").then((cleanupResults) => {\\n    const cleanupSizeGB = (cleanupResults.total_size / (1024 * 1024 * 1024)).toFixed(1);\\n    steps[0].description = `${cleanupSizeGB} GB to clean`;\\n    steps[0].subtext = `${cleanupResults.total_files} items found`;\\n    junkStats = { ...junkStats, ...cleanupResults };\\n    isCleanupScanning = false;\\n  }).catch((error) => {\\n    console.error(\\"Cleanup tarama hatas\\\\u0131:\\", error);\\n    steps[0].description = \\"Scan error\\";\\n    steps[0].subtext = \\"please try again\\";\\n    isCleanupScanning = false;\\n  });\\n  invoke(\\"scan_protection\\").then((protectionResults) => {\\n    const protectionSizeGB = (protectionResults.total_size / (1024 * 1024 * 1024)).toFixed(1);\\n    steps[1].description = `${protectionSizeGB} GB affected`;\\n    steps[1].subtext = `${protectionResults.total_files} threats found`;\\n    junkStats = { ...junkStats, protection: protectionResults };\\n    isProtectionScanning = false;\\n  }).catch((error) => {\\n    console.error(\\"Protection tarama hatas\\\\u0131:\\", error);\\n    steps[1].description = \\"Scan error\\";\\n    steps[1].subtext = \\"please try again\\";\\n    isProtectionScanning = false;\\n  });\\n  invoke(\\"scan_performance\\").then((performanceResults) => {\\n    const itemCount = performanceResults.total_files;\\n    steps[2].description = `${itemCount} items detected`;\\n    steps[2].subtext = \\"affecting system performance\\";\\n    junkStats = { ...junkStats, performance: performanceResults };\\n    isPerformanceScanning = false;\\n  }).catch((error) => {\\n    console.error(\\"Performance tarama hatas\\\\u0131:\\", error);\\n    steps[2].description = \\"Scan error\\";\\n    steps[2].subtext = \\"please try again\\";\\n    isPerformanceScanning = false;\\n  });\\n  invoke(\\"scan_applications\\").then((applicationsResults) => {\\n    const updateCount = applicationsResults.total_files;\\n    steps[3].description = `${updateCount} updates available`;\\n    steps[3].subtext = \\"apps need attention\\";\\n    junkStats = { ...junkStats, applications: applicationsResults };\\n    isApplicationsScanning = false;\\n  }).catch((error) => {\\n    console.error(\\"Applications tarama hatas\\\\u0131:\\", error);\\n    steps[3].description = \\"Scan error\\";\\n    steps[3].subtext = \\"please try again\\";\\n    isApplicationsScanning = false;\\n  });\\n  invoke(\\"scan_clutter\\").then((clutterResults) => {\\n    const itemCount = clutterResults.total_files;\\n    steps[4].description = `${itemCount} duplicate files`;\\n    steps[4].subtext = `${formatSize(clutterResults.total_size)} to clean`;\\n    junkStats = { ...junkStats, clutter: clutterResults };\\n    isClutterScanning = false;\\n  }).catch((error) => {\\n    console.error(\\"Clutter tarama hatas\\\\u0131:\\", error);\\n    steps[4].description = \\"Scan error\\";\\n    steps[4].subtext = \\"please try again\\";\\n    isClutterScanning = false;\\n  });\\n}\\nfunction nextStep() {\\n  if (currentStep < steps.length - 1 && stepCompleted[currentStep]) {\\n    currentStep++;\\n  } else if (currentStep === steps.length - 1 && stepCompleted[currentStep]) {\\n    scanComplete = true;\\n  }\\n}\\nfunction completeCurrentStep() {\\n  stepCompleted[currentStep] = true;\\n}\\nfunction stopScan() {\\n  isScanning = false;\\n  scanComplete = false;\\n  currentStep = 0;\\n  junkStats = null;\\n  stepCompleted = [false];\\n}\\nfunction openReviewModal(category, stepIndex) {\\n  selectedCategory = {\\n    title: steps[stepIndex].title,\\n    description: steps[stepIndex].description,\\n    icon: steps[stepIndex].icon,\\n    size: stepIndex === 0 ? junkStats?.total_size : stepIndex === 1 ? junkStats?.protection?.total_size : stepIndex === 2 ? junkStats?.performance?.total_size : stepIndex === 3 ? junkStats?.applications?.total_size : junkStats?.clutter?.total_size,\\n    categories: (stepIndex === 0 ? junkStats?.categories : stepIndex === 1 ? junkStats?.protection?.categories : stepIndex === 2 ? junkStats?.performance?.categories : stepIndex === 3 ? junkStats?.applications?.categories : junkStats?.clutter?.categories)?.sort((a, b) => b.size - a.size)?.map((cat) => ({\\n      ...cat,\\n      files: [...cat.files || []].sort((a, b) => b.size - a.size)\\n    }))\\n  };\\n  showReviewModal = true;\\n}\\n$: if (junkStats?.categories) {\\n  junkStats.categories = junkStats.categories.map((cat) => ({\\n    ...cat,\\n    isOpen: false\\n  }));\\n}\\nasync function deleteFile(path, category) {\\n  try {\\n    await invoke(\\"delete_file\\", { path });\\n    category.files = category.files.filter((f) => f.path !== path);\\n    category.size = category.files.reduce((total, f) => total + f.size, 0);\\n    category.file_count = category.files.length;\\n    if (selectedCategory) {\\n      selectedCategory.categories = selectedCategory.categories.map((cat) => {\\n        if (cat.name === category.name) {\\n          return {\\n            ...cat,\\n            files: category.files,\\n            size: category.size,\\n            file_count: category.file_count\\n          };\\n        }\\n        return cat;\\n      });\\n      selectedCategory.size = selectedCategory.categories.reduce((total, cat) => total + cat.size, 0);\\n    }\\n  } catch (error) {\\n    console.error(\\"Dosya silme hatas\\\\u0131:\\", error);\\n  }\\n}\\nfunction toggleFileSelection(path) {\\n  if (selectedFiles.has(path)) {\\n    selectedFiles.delete(path);\\n  } else {\\n    selectedFiles.add(path);\\n  }\\n  selectedFiles = selectedFiles;\\n}\\nfunction selectAllFiles(category) {\\n  if (selectedFiles.size === category.files.length) {\\n    selectedFiles.clear();\\n  } else {\\n    category.files.forEach((file) => selectedFiles.add(file.path));\\n  }\\n  selectedFiles = selectedFiles;\\n}\\nasync function deleteSelectedFiles(category) {\\n  const filesToDelete = [...selectedFiles];\\n  let deletedCount = 0;\\n  let errorCount = 0;\\n  for (const path of filesToDelete) {\\n    try {\\n      await deleteFile(path, category);\\n      deletedCount++;\\n    } catch (error) {\\n      console.error(\\"Dosya silme hatas\\\\u0131:\\", error);\\n      errorCount++;\\n    }\\n  }\\n  selectedFiles.clear();\\n  selectedFiles = selectedFiles;\\n  if (errorCount > 0) {\\n    deleteError = `${errorCount} dosya silinemedi. ${deletedCount} dosya ba\\\\u015Far\\\\u0131yla silindi.`;\\n  } else if (deletedCount > 0) {\\n    deleteSuccess = true;\\n    setTimeout(() => {\\n      showDeleteConfirmModal = false;\\n      deleteSuccess = false;\\n    }, 1500);\\n  }\\n}\\nasync function confirmDelete(path, category) {\\n  if (path) {\\n    fileToDelete = { path, name: path.split(\\"/\\").pop() || path };\\n  } else {\\n    fileToDelete = {\\n      path: \\"multiple\\",\\n      name: `${selectedFiles.size} files`\\n    };\\n  }\\n  categoryToUpdate = category;\\n  showDeleteConfirmModal = true;\\n}\\nasync function handleDelete() {\\n  if (fileToDelete && categoryToUpdate) {\\n    isDeleting = true;\\n    deleteError = null;\\n    deleteSuccess = false;\\n    showDeleteConfirmModal = false;\\n    try {\\n      if (fileToDelete.path === \\"multiple\\") {\\n        await deleteSelectedFiles(categoryToUpdate);\\n      } else {\\n        await deleteFile(fileToDelete.path, categoryToUpdate);\\n        deleteSuccess = true;\\n        if (steps[currentStep]) {\\n          const updatedSize = (categoryToUpdate.size / (1024 * 1024 * 1024)).toFixed(1);\\n          steps[currentStep].description = `${updatedSize} GB to clean`;\\n          steps[currentStep].subtext = `${categoryToUpdate.file_count} items found`;\\n        }\\n        setTimeout(() => {\\n          fileToDelete = null;\\n          categoryToUpdate = null;\\n          deleteSuccess = false;\\n        }, 2e3);\\n      }\\n    } catch (error) {\\n      console.error(\\"Dosya silme hatas\\\\u0131:\\", error);\\n      deleteError = error;\\n      showDeleteConfirmModal = true;\\n    } finally {\\n      isDeleting = false;\\n    }\\n  }\\n}\\nonMount(() => {\\n  return () => {\\n    if (interval) clearInterval(interval);\\n  };\\n});\\n<\/script>\\n\\n<div class=\\"h-full flex flex-col relative\\">\\n  <!-- Animasyonlu Arka Plan -->\\n  <div class=\\"fixed inset-0 overflow-hidden\\">\\n    <div class=\\"absolute inset-0 bg-gradient-to-br from-purple-900 via-violet-800 to-purple-800\\"></div>\\n    <div class=\\"absolute inset-0 opacity-40\\">\\n      <div class=\\"absolute inset-0 bg-[radial-gradient(circle_at_50%_120%,rgba(120,0,200,0.3),rgba(120,0,200,0))] animate-pulse\\"></div>\\n      <div class=\\"absolute inset-0 bg-[radial-gradient(circle_at_50%_0%,rgba(120,0,200,0.3),rgba(120,0,200,0))] animate-pulse\\" style=\\"animation-delay: -2s;\\"></div>\\n      <div class=\\"absolute w-full h-[200%] -top-full animate-aurora\\">\\n        <div class=\\"absolute inset-0 bg-gradient-to-b from-transparent via-purple-500/20 to-transparent\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- İçerik -->\\n  <div class=\\"relative flex-1 flex flex-col items-center justify-center p-8\\">\\n    {#if !isScanning}\\n      <div class=\\"text-center mb-32\\" in:fade>\\n        <h1 class=\\"text-5xl font-bold text-white mb-4\\">Welcome to CleanMyMac</h1>\\n        <p class=\\"text-xl text-white/70\\">Start with a quick and extensive scan of your Mac.</p>\\n      </div>\\n      <button \\n        on:click={startScan}\\n        class=\\"relative w-32 h-32 bg-white/10 hover:bg-white/20 transition-all duration-300 rounded-full flex items-center justify-center shadow-2xl group backdrop-blur-xl\\"\\n      >\\n        <div class=\\"absolute inset-0 rounded-full bg-gradient-to-t from-black/20 to-transparent\\"></div>\\n        <span class=\\"text-2xl font-semibold text-white group-hover:scale-110 transition-transform duration-300\\">Scan</span>\\n      </button>\\n    {:else}\\n      <div class=\\"w-full max-w-6xl space-y-6\\" in:fade={{ duration: 300 }}>\\n        <h2 class=\\"text-4xl font-bold text-white text-center mb-12\\">Smart Care</h2>\\n        <div class=\\"grid grid-cols-2 gap-6\\">\\n          <!-- Temporary Files Card -->\\n          <div class=\\"relative rounded-3xl overflow-hidden backdrop-blur-sm bg-white/5\\">\\n            {#if isCleanupScanning}\\n              <!-- Loading State -->\\n              <div class=\\"p-8\\">\\n                <div class=\\"flex flex-col items-center justify-center\\">\\n                  <div class=\\"relative\\">\\n                    <div class=\\"w-16 h-16 border-4 border-purple-500/20 rounded-full animate-[spin_3s_linear_infinite]\\"></div>\\n                    <div class=\\"w-16 h-16 border-4 border-purple-500/20 border-t-purple-500 rounded-full animate-[spin_2s_linear_infinite] absolute inset-0\\"></div>\\n                    <div class=\\"w-16 h-16 border-4 border-purple-500/20 border-t-purple-500/50 rounded-full animate-[spin_1s_linear_infinite] absolute inset-0\\"></div>\\n                    \\n                    <!-- Merkez İkon -->\\n                    <div class=\\"absolute inset-0 flex items-center justify-center\\">\\n                      <div class=\\"w-8 h-8 rounded-lg bg-gradient-to-br from-purple-500 to-purple-600 p-0.5\\">\\n                        <div class=\\"w-full h-full rounded-lg bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                          <span class=\\"text-xl animate-pulse\\">🧹</span>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n                  <!-- Yükleniyor Yazısı -->\\n                  <div class=\\"mt-4 text-center\\">\\n                    <h3 class=\\"text-base font-medium text-white mb-1\\">Scanning Files</h3>\\n                    <div class=\\"flex items-center justify-center gap-1 text-purple-300/70\\">\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0s;\\"></div>\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.2s;\\"></div>\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.4s;\\"></div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            {:else}\\n              <!-- Result State -->\\n              <div class=\\"relative h-full p-6\\">\\n                <div class=\\"absolute inset-0 bg-gradient-to-br {steps[0].color} opacity-20\\"></div>\\n                <div class=\\"flex items-start justify-between\\">\\n                  <div>\\n                    <div class=\\"flex items-center gap-2 mb-2\\">\\n                      <div class=\\"w-5 h-5 rounded-full bg-white/20 flex items-center justify-center\\">\\n                        <div class=\\"w-3 h-3 rounded-full bg-white\\"></div>\\n                      </div>\\n                      <h3 class=\\"text-lg font-medium text-white/90\\">{steps[0].title}</h3>\\n                    </div>\\n                    <div class=\\"space-y-1\\">\\n                      <p class=\\"text-2xl font-bold text-white\\">{steps[0].description}</p>\\n                      <p class=\\"text-sm text-white/50\\">{steps[0].subtext}</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\"w-16 h-16 rounded-2xl bg-gradient-to-br {steps[0].color} p-0.5\\">\\n                    <div class=\\"w-full h-full rounded-2xl bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                      <span class=\\"text-2xl\\">{steps[0].icon}</span>\\n                    </div>\\n                  </div>\\n                </div>\\n                <button \\n                  class=\\"absolute bottom-4 right-4 px-3 py-1.5 rounded-lg bg-white/10 hover:bg-white/20 text-white/90 text-xs backdrop-blur-sm transition-all duration-300 flex items-center gap-1.5 group\\"\\n                  on:click={() => openReviewModal(junkStats?.categories[0], 0)}\\n                >\\n                  <span>Review</span>\\n                  <svg \\n                    xmlns=\\"http://www.w3.org/2000/svg\\" \\n                    class=\\"w-3.5 h-3.5 transform transition-transform group-hover:translate-x-0.5\\" \\n                    viewBox=\\"0 0 24 24\\" \\n                    fill=\\"none\\" \\n                    stroke=\\"currentColor\\" \\n                    stroke-width=\\"2\\"\\n                  >\\n                    <path d=\\"M9 5l7 7-7 7\\" />\\n                  </svg>\\n                </button>\\n              </div>\\n            {/if}\\n          </div>\\n\\n          <!-- Protection Card -->\\n          <div class=\\"relative rounded-3xl overflow-hidden backdrop-blur-sm bg-white/5\\">\\n            {#if isProtectionScanning}\\n              <!-- Loading State -->\\n              <div class=\\"p-8\\">\\n                <div class=\\"flex flex-col items-center justify-center\\">\\n                  <div class=\\"relative\\">\\n                    <div class=\\"w-16 h-16 border-4 border-red-500/20 rounded-full animate-[spin_3s_linear_infinite]\\"></div>\\n                    <div class=\\"w-16 h-16 border-4 border-red-500/20 border-t-red-500 rounded-full animate-[spin_2s_linear_infinite] absolute inset-0\\"></div>\\n                    <div class=\\"w-16 h-16 border-4 border-red-500/20 border-t-red-500/50 rounded-full animate-[spin_1s_linear_infinite] absolute inset-0\\"></div>\\n                    \\n                    <!-- Merkez İkon -->\\n                    <div class=\\"absolute inset-0 flex items-center justify-center\\">\\n                      <div class=\\"w-8 h-8 rounded-lg bg-gradient-to-br from-red-500 to-red-600 p-0.5\\">\\n                        <div class=\\"w-full h-full rounded-lg bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                          <span class=\\"text-xl animate-pulse\\">🛡️</span>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n                  <!-- Yükleniyor Yazısı -->\\n                  <div class=\\"mt-4 text-center\\">\\n                    <h3 class=\\"text-base font-medium text-white mb-1\\">Scanning Threats</h3>\\n                    <div class=\\"flex items-center justify-center gap-1 text-red-300/70\\">\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0s;\\"></div>\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.2s;\\"></div>\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.4s;\\"></div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            {:else}\\n              <!-- Result State -->\\n              <div class=\\"relative h-full p-6\\">\\n                <div class=\\"absolute inset-0 bg-gradient-to-br {steps[1].color} opacity-20\\"></div>\\n                <div class=\\"flex items-start justify-between\\">\\n                  <div>\\n                    <div class=\\"flex items-center gap-2 mb-2\\">\\n                      <div class=\\"w-5 h-5 rounded-full bg-white/20 flex items-center justify-center\\">\\n                        <div class=\\"w-3 h-3 rounded-full bg-white\\"></div>\\n                      </div>\\n                      <h3 class=\\"text-lg font-medium text-white/90\\">{steps[1].title}</h3>\\n                    </div>\\n                    <div class=\\"space-y-1\\">\\n                      <p class=\\"text-2xl font-bold text-white\\">{steps[1].description}</p>\\n                      <p class=\\"text-sm text-white/50\\">{steps[1].subtext}</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\"w-16 h-16 rounded-2xl bg-gradient-to-br {steps[1].color} p-0.5\\">\\n                    <div class=\\"w-full h-full rounded-2xl bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                      <span class=\\"text-2xl\\">{steps[1].icon}</span>\\n                    </div>\\n                  </div>\\n                </div>\\n                <button \\n                  class=\\"absolute bottom-4 right-4 px-3 py-1.5 rounded-lg bg-white/10 hover:bg-white/20 text-white/90 text-xs backdrop-blur-sm transition-all duration-300 flex items-center gap-1.5 group\\"\\n                  on:click={() => openReviewModal(junkStats?.protection?.categories[0], 1)}\\n                >\\n                  <span>Review</span>\\n                  <svg \\n                    xmlns=\\"http://www.w3.org/2000/svg\\" \\n                    class=\\"w-3.5 h-3.5 transform transition-transform group-hover:translate-x-0.5\\" \\n                    viewBox=\\"0 0 24 24\\" \\n                    fill=\\"none\\" \\n                    stroke=\\"currentColor\\" \\n                    stroke-width=\\"2\\"\\n                  >\\n                    <path d=\\"M9 5l7 7-7 7\\" />\\n                  </svg>\\n                </button>\\n              </div>\\n            {/if}\\n          </div>\\n\\n          <!-- Performance Card -->\\n          <div class=\\"relative rounded-3xl overflow-hidden backdrop-blur-sm bg-white/5\\">\\n            {#if isPerformanceScanning}\\n              <!-- Loading State -->\\n              <div class=\\"p-8\\">\\n                <div class=\\"flex flex-col items-center justify-center\\">\\n                  <div class=\\"relative\\">\\n                    <div class=\\"w-16 h-16 border-4 border-blue-500/20 rounded-full animate-[spin_3s_linear_infinite]\\"></div>\\n                    <div class=\\"w-16 h-16 border-4 border-blue-500/20 border-t-blue-500 rounded-full animate-[spin_2s_linear_infinite] absolute inset-0\\"></div>\\n                    <div class=\\"w-16 h-16 border-4 border-blue-500/20 border-t-blue-500/50 rounded-full animate-[spin_1s_linear_infinite] absolute inset-0\\"></div>\\n                    \\n                    <!-- Merkez İkon -->\\n                    <div class=\\"absolute inset-0 flex items-center justify-center\\">\\n                      <div class=\\"w-8 h-8 rounded-lg bg-gradient-to-br from-blue-500 to-blue-600 p-0.5\\">\\n                        <div class=\\"w-full h-full rounded-lg bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                          <span class=\\"text-xl animate-pulse\\">⚡</span>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n                  <!-- Yükleniyor Yazısı -->\\n                  <div class=\\"mt-4 text-center\\">\\n                    <h3 class=\\"text-base font-medium text-white mb-1\\">Scanning Performance</h3>\\n                    <div class=\\"flex items-center justify-center gap-1 text-blue-300/70\\">\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0s;\\"></div>\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.2s;\\"></div>\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.4s;\\"></div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            {:else}\\n              <!-- Result State -->\\n              <div class=\\"relative h-full p-6\\">\\n                <div class=\\"absolute inset-0 bg-gradient-to-br {steps[2].color} opacity-20\\"></div>\\n                <div class=\\"flex items-start justify-between\\">\\n                  <div>\\n                    <div class=\\"flex items-center gap-2 mb-2\\">\\n                      <div class=\\"w-5 h-5 rounded-full bg-white/20 flex items-center justify-center\\">\\n                        <div class=\\"w-3 h-3 rounded-full bg-white\\"></div>\\n                      </div>\\n                      <h3 class=\\"text-lg font-medium text-white/90\\">{steps[2].title}</h3>\\n                    </div>\\n                    <div class=\\"space-y-1\\">\\n                      <p class=\\"text-2xl font-bold text-white\\">{steps[2].description}</p>\\n                      <p class=\\"text-sm text-white/50\\">{steps[2].subtext}</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\"w-16 h-16 rounded-2xl bg-gradient-to-br {steps[2].color} p-0.5\\">\\n                    <div class=\\"w-full h-full rounded-2xl bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                      <span class=\\"text-2xl\\">{steps[2].icon}</span>\\n                    </div>\\n                  </div>\\n                </div>\\n                <button \\n                  class=\\"absolute bottom-4 right-4 px-3 py-1.5 rounded-lg bg-white/10 hover:bg-white/20 text-white/90 text-xs backdrop-blur-sm transition-all duration-300 flex items-center gap-1.5 group\\"\\n                  on:click={() => openReviewModal(junkStats?.performance?.categories[0], 2)}\\n                >\\n                  <span>Review</span>\\n                  <svg \\n                    xmlns=\\"http://www.w3.org/2000/svg\\" \\n                    class=\\"w-3.5 h-3.5 transform transition-transform group-hover:translate-x-0.5\\" \\n                    viewBox=\\"0 0 24 24\\" \\n                    fill=\\"none\\" \\n                    stroke=\\"currentColor\\" \\n                    stroke-width=\\"2\\"\\n                  >\\n                    <path d=\\"M9 5l7 7-7 7\\" />\\n                  </svg>\\n                </button>\\n              </div>\\n            {/if}\\n          </div>\\n\\n          <!-- Applications Card -->\\n          <div class=\\"relative rounded-3xl overflow-hidden backdrop-blur-sm bg-white/5\\">\\n            {#if isApplicationsScanning}\\n              <!-- Loading State -->\\n              <div class=\\"p-8\\">\\n                <div class=\\"flex flex-col items-center justify-center\\">\\n                  <div class=\\"relative\\">\\n                    <div class=\\"w-16 h-16 border-4 border-orange-500/20 rounded-full animate-[spin_3s_linear_infinite]\\"></div>\\n                    <div class=\\"w-16 h-16 border-4 border-orange-500/20 border-t-orange-500 rounded-full animate-[spin_2s_linear_infinite] absolute inset-0\\"></div>\\n                    <div class=\\"w-16 h-16 border-4 border-orange-500/20 border-t-orange-500/50 rounded-full animate-[spin_1s_linear_infinite] absolute inset-0\\"></div>\\n                    \\n                    <!-- Merkez İkon -->\\n                    <div class=\\"absolute inset-0 flex items-center justify-center\\">\\n                      <div class=\\"w-8 h-8 rounded-lg bg-gradient-to-br from-orange-500 to-orange-600 p-0.5\\">\\n                        <div class=\\"w-full h-full rounded-lg bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                          <span class=\\"text-xl animate-pulse\\">📱</span>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n                  <!-- Yükleniyor Yazısı -->\\n                  <div class=\\"mt-4 text-center\\">\\n                    <h3 class=\\"text-base font-medium text-white mb-1\\">Scanning Applications</h3>\\n                    <div class=\\"flex items-center justify-center gap-1 text-orange-300/70\\">\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0s;\\"></div>\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.2s;\\"></div>\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.4s;\\"></div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            {:else}\\n              <!-- Result State -->\\n              <div class=\\"relative h-full p-6\\">\\n                <div class=\\"absolute inset-0 bg-gradient-to-br {steps[3].color} opacity-20\\"></div>\\n                <div class=\\"flex items-start justify-between\\">\\n                  <div>\\n                    <div class=\\"flex items-center gap-2 mb-2\\">\\n                      <div class=\\"w-5 h-5 rounded-full bg-white/20 flex items-center justify-center\\">\\n                        <div class=\\"w-3 h-3 rounded-full bg-white\\"></div>\\n                      </div>\\n                      <h3 class=\\"text-lg font-medium text-white/90\\">{steps[3].title}</h3>\\n                    </div>\\n                    <div class=\\"space-y-1\\">\\n                      <p class=\\"text-2xl font-bold text-white\\">{steps[3].description}</p>\\n                      <p class=\\"text-sm text-white/50\\">{steps[3].subtext}</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\"w-16 h-16 rounded-2xl bg-gradient-to-br {steps[3].color} p-0.5\\">\\n                    <div class=\\"w-full h-full rounded-2xl bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                      <span class=\\"text-2xl\\">{steps[3].icon}</span>\\n                    </div>\\n                  </div>\\n                </div>\\n                <button \\n                  class=\\"absolute bottom-4 right-4 px-3 py-1.5 rounded-lg bg-white/10 hover:bg-white/20 text-white/90 text-xs backdrop-blur-sm transition-all duration-300 flex items-center gap-1.5 group\\"\\n                  on:click={() => openReviewModal(junkStats?.applications?.categories[0], 3)}\\n                >\\n                  <span>Review</span>\\n                  <svg \\n                    xmlns=\\"http://www.w3.org/2000/svg\\" \\n                    class=\\"w-3.5 h-3.5 transform transition-transform group-hover:translate-x-0.5\\" \\n                    viewBox=\\"0 0 24 24\\" \\n                    fill=\\"none\\" \\n                    stroke=\\"currentColor\\" \\n                    stroke-width=\\"2\\"\\n                  >\\n                    <path d=\\"M9 5l7 7-7 7\\" />\\n                  </svg>\\n                </button>\\n              </div>\\n            {/if}\\n          </div>\\n\\n          <!-- My Clutter Card -->\\n          <div class=\\"relative rounded-3xl overflow-hidden backdrop-blur-sm bg-white/5 col-span-2\\">\\n            {#if isClutterScanning}\\n              <!-- Loading State -->\\n              <div class=\\"p-8\\">\\n                <div class=\\"flex flex-col items-center justify-center\\">\\n                  <div class=\\"relative\\">\\n                    <div class=\\"w-16 h-16 border-4 border-pink-500/20 rounded-full animate-[spin_3s_linear_infinite]\\"></div>\\n                    <div class=\\"w-16 h-16 border-4 border-pink-500/20 border-t-pink-500 rounded-full animate-[spin_2s_linear_infinite] absolute inset-0\\"></div>\\n                    <div class=\\"w-16 h-16 border-4 border-pink-500/20 border-t-pink-500/50 rounded-full animate-[spin_1s_linear_infinite] absolute inset-0\\"></div>\\n                    \\n                    <!-- Merkez İkon -->\\n                    <div class=\\"absolute inset-0 flex items-center justify-center\\">\\n                      <div class=\\"w-8 h-8 rounded-lg bg-gradient-to-br from-pink-500 to-pink-600 p-0.5\\">\\n                        <div class=\\"w-full h-full rounded-lg bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                          <span class=\\"text-xl animate-pulse\\">🗂️</span>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n                  <!-- Yükleniyor Yazısı -->\\n                  <div class=\\"mt-4 text-center\\">\\n                    <h3 class=\\"text-base font-medium text-white mb-1\\">Scanning My Clutter</h3>\\n                    <div class=\\"flex items-center justify-center gap-1 text-pink-300/70\\">\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0s;\\"></div>\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.2s;\\"></div>\\n                      <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.4s;\\"></div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            {:else}\\n              <!-- Result State -->\\n              <div class=\\"relative h-full p-6\\">\\n                <div class=\\"absolute inset-0 bg-gradient-to-br {steps[4].color} opacity-20\\"></div>\\n                <div class=\\"flex items-start justify-between\\">\\n                  <div>\\n                    <div class=\\"flex items-center gap-2 mb-2\\">\\n                      <div class=\\"w-5 h-5 rounded-full bg-white/20 flex items-center justify-center\\">\\n                        <div class=\\"w-3 h-3 rounded-full bg-white\\"></div>\\n                      </div>\\n                      <h3 class=\\"text-lg font-medium text-white/90\\">{steps[4].title}</h3>\\n                    </div>\\n                    <div class=\\"space-y-1\\">\\n                      <p class=\\"text-2xl font-bold text-white\\">{steps[4].description}</p>\\n                      <p class=\\"text-sm text-white/50\\">{steps[4].subtext}</p>\\n                    </div>\\n                  </div>\\n                  <div class=\\"w-16 h-16 rounded-2xl bg-gradient-to-br {steps[4].color} p-0.5\\">\\n                    <div class=\\"w-full h-full rounded-2xl bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                      <span class=\\"text-2xl\\">{steps[4].icon}</span>\\n                    </div>\\n                  </div>\\n                </div>\\n                <button \\n                  class=\\"absolute bottom-4 right-4 px-3 py-1.5 rounded-lg bg-white/10 hover:bg-white/20 text-white/90 text-xs backdrop-blur-sm transition-all duration-300 flex items-center gap-1.5 group\\"\\n                  on:click={() => openReviewModal(junkStats?.clutter?.categories[0], 4)}\\n                >\\n                  <span>Review</span>\\n                  <svg \\n                    xmlns=\\"http://www.w3.org/2000/svg\\" \\n                    class=\\"w-3.5 h-3.5 transform transition-transform group-hover:translate-x-0.5\\" \\n                    viewBox=\\"0 0 24 24\\" \\n                    fill=\\"none\\" \\n                    stroke=\\"currentColor\\" \\n                    stroke-width=\\"2\\"\\n                  >\\n                    <path d=\\"M9 5l7 7-7 7\\" />\\n                  </svg>\\n                </button>\\n              </div>\\n            {/if}\\n          </div>\\n        </div>\\n      </div>\\n    {/if}\\n  </div>\\n</div>\\n\\n<!-- Loading State -->\\n{#if isScanning}\\n  <div class=\\"w-full max-w-6xl space-y-6\\" in:fade={{ duration: 300 }}>\\n    <h2 class=\\"text-4xl font-bold text-white text-center mb-12\\">Smart Care</h2>\\n    <div class=\\"grid grid-cols-2 gap-6\\">\\n      <!-- Temporary Files Card -->\\n      <div class=\\"relative rounded-3xl overflow-hidden backdrop-blur-sm bg-white/5\\">\\n        {#if isCleanupScanning}\\n          <!-- Loading State -->\\n          <div class=\\"p-8\\">\\n            <div class=\\"flex flex-col items-center justify-center\\">\\n              <div class=\\"relative\\">\\n                <div class=\\"w-16 h-16 border-4 border-purple-500/20 rounded-full animate-[spin_3s_linear_infinite]\\"></div>\\n                <div class=\\"w-16 h-16 border-4 border-purple-500/20 border-t-purple-500 rounded-full animate-[spin_2s_linear_infinite] absolute inset-0\\"></div>\\n                <div class=\\"w-16 h-16 border-4 border-purple-500/20 border-t-purple-500/50 rounded-full animate-[spin_1s_linear_infinite] absolute inset-0\\"></div>\\n                \\n                <!-- Merkez İkon -->\\n                <div class=\\"absolute inset-0 flex items-center justify-center\\">\\n                  <div class=\\"w-8 h-8 rounded-lg bg-gradient-to-br from-purple-500 to-purple-600 p-0.5\\">\\n                    <div class=\\"w-full h-full rounded-lg bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                      <span class=\\"text-xl animate-pulse\\">🧹</span>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <!-- Yükleniyor Yazısı -->\\n              <div class=\\"mt-4 text-center\\">\\n                <h3 class=\\"text-base font-medium text-white mb-1\\">Scanning Files</h3>\\n                <div class=\\"flex items-center justify-center gap-1 text-purple-300/70\\">\\n                  <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0s;\\"></div>\\n                  <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.2s;\\"></div>\\n                  <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.4s;\\"></div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        {:else}\\n          <!-- Result State -->\\n          <div class=\\"relative h-full p-6\\">\\n            <div class=\\"absolute inset-0 bg-gradient-to-br {steps[0].color} opacity-20\\"></div>\\n            <div class=\\"flex items-start justify-between\\">\\n              <div>\\n                <div class=\\"flex items-center gap-2 mb-2\\">\\n                  <div class=\\"w-5 h-5 rounded-full bg-white/20 flex items-center justify-center\\">\\n                    <div class=\\"w-3 h-3 rounded-full bg-white\\"></div>\\n                  </div>\\n                  <h3 class=\\"text-lg font-medium text-white/90\\">{steps[0].title}</h3>\\n                </div>\\n                <div class=\\"space-y-1\\">\\n                  <p class=\\"text-2xl font-bold text-white\\">{steps[0].description}</p>\\n                  <p class=\\"text-sm text-white/50\\">{steps[0].subtext}</p>\\n                </div>\\n              </div>\\n              <div class=\\"w-16 h-16 rounded-2xl bg-gradient-to-br {steps[0].color} p-0.5\\">\\n                <div class=\\"w-full h-full rounded-2xl bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                  <span class=\\"text-2xl\\">{steps[0].icon}</span>\\n                </div>\\n              </div>\\n            </div>\\n            <button \\n              class=\\"absolute bottom-4 right-4 px-3 py-1.5 rounded-lg bg-white/10 hover:bg-white/20 text-white/90 text-xs backdrop-blur-sm transition-all duration-300 flex items-center gap-1.5 group\\"\\n              on:click={() => openReviewModal(junkStats?.categories[0], 0)}\\n            >\\n              <span>Review</span>\\n              <svg \\n                xmlns=\\"http://www.w3.org/2000/svg\\" \\n                class=\\"w-3.5 h-3.5 transform transition-transform group-hover:translate-x-0.5\\" \\n                viewBox=\\"0 0 24 24\\" \\n                fill=\\"none\\" \\n                stroke=\\"currentColor\\" \\n                stroke-width=\\"2\\"\\n              >\\n                <path d=\\"M9 5l7 7-7 7\\" />\\n              </svg>\\n            </button>\\n          </div>\\n        {/if}\\n      </div>\\n\\n      <!-- Protection Card -->\\n      <div class=\\"relative rounded-3xl overflow-hidden backdrop-blur-sm bg-white/5\\">\\n        {#if isProtectionScanning}\\n          <!-- Loading State -->\\n          <div class=\\"p-8\\">\\n            <div class=\\"flex flex-col items-center justify-center\\">\\n              <div class=\\"relative\\">\\n                <div class=\\"w-16 h-16 border-4 border-red-500/20 rounded-full animate-[spin_3s_linear_infinite]\\"></div>\\n                <div class=\\"w-16 h-16 border-4 border-red-500/20 border-t-red-500 rounded-full animate-[spin_2s_linear_infinite] absolute inset-0\\"></div>\\n                <div class=\\"w-16 h-16 border-4 border-red-500/20 border-t-red-500/50 rounded-full animate-[spin_1s_linear_infinite] absolute inset-0\\"></div>\\n                \\n                <!-- Merkez İkon -->\\n                <div class=\\"absolute inset-0 flex items-center justify-center\\">\\n                  <div class=\\"w-8 h-8 rounded-lg bg-gradient-to-br from-red-500 to-red-600 p-0.5\\">\\n                    <div class=\\"w-full h-full rounded-lg bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                      <span class=\\"text-xl animate-pulse\\">🛡️</span>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <!-- Yükleniyor Yazısı -->\\n              <div class=\\"mt-4 text-center\\">\\n                <h3 class=\\"text-base font-medium text-white mb-1\\">Scanning Threats</h3>\\n                <div class=\\"flex items-center justify-center gap-1 text-red-300/70\\">\\n                  <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0s;\\"></div>\\n                  <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.2s;\\"></div>\\n                  <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.4s;\\"></div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        {:else}\\n          <!-- Result State -->\\n          <div class=\\"relative h-full p-6\\">\\n            <div class=\\"absolute inset-0 bg-gradient-to-br {steps[1].color} opacity-20\\"></div>\\n            <div class=\\"flex items-start justify-between\\">\\n              <div>\\n                <div class=\\"flex items-center gap-2 mb-2\\">\\n                  <div class=\\"w-5 h-5 rounded-full bg-white/20 flex items-center justify-center\\">\\n                    <div class=\\"w-3 h-3 rounded-full bg-white\\"></div>\\n                  </div>\\n                  <h3 class=\\"text-lg font-medium text-white/90\\">{steps[1].title}</h3>\\n                </div>\\n                <div class=\\"space-y-1\\">\\n                  <p class=\\"text-2xl font-bold text-white\\">{steps[1].description}</p>\\n                  <p class=\\"text-sm text-white/50\\">{steps[1].subtext}</p>\\n                </div>\\n              </div>\\n              <div class=\\"w-16 h-16 rounded-2xl bg-gradient-to-br {steps[1].color} p-0.5\\">\\n                <div class=\\"w-full h-full rounded-2xl bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                  <span class=\\"text-2xl\\">{steps[1].icon}</span>\\n                </div>\\n              </div>\\n            </div>\\n            <button \\n              class=\\"absolute bottom-4 right-4 px-3 py-1.5 rounded-lg bg-white/10 hover:bg-white/20 text-white/90 text-xs backdrop-blur-sm transition-all duration-300 flex items-center gap-1.5 group\\"\\n              on:click={() => openReviewModal(junkStats?.protection?.categories[0], 1)}\\n            >\\n              <span>Review</span>\\n              <svg \\n                xmlns=\\"http://www.w3.org/2000/svg\\" \\n                class=\\"w-3.5 h-3.5 transform transition-transform group-hover:translate-x-0.5\\" \\n                viewBox=\\"0 0 24 24\\" \\n                fill=\\"none\\" \\n                stroke=\\"currentColor\\" \\n                stroke-width=\\"2\\"\\n              >\\n                <path d=\\"M9 5l7 7-7 7\\" />\\n              </svg>\\n            </button>\\n          </div>\\n        {/if}\\n      </div>\\n\\n      <!-- Performance Card -->\\n      <div class=\\"relative rounded-3xl overflow-hidden backdrop-blur-sm bg-white/5\\">\\n        {#if isPerformanceScanning}\\n          <!-- Loading State -->\\n          <div class=\\"p-8\\">\\n            <div class=\\"flex flex-col items-center justify-center\\">\\n              <div class=\\"relative\\">\\n                <div class=\\"w-16 h-16 border-4 border-blue-500/20 rounded-full animate-[spin_3s_linear_infinite]\\"></div>\\n                <div class=\\"w-16 h-16 border-4 border-blue-500/20 border-t-blue-500 rounded-full animate-[spin_2s_linear_infinite] absolute inset-0\\"></div>\\n                <div class=\\"w-16 h-16 border-4 border-blue-500/20 border-t-blue-500/50 rounded-full animate-[spin_1s_linear_infinite] absolute inset-0\\"></div>\\n                \\n                <!-- Merkez İkon -->\\n                <div class=\\"absolute inset-0 flex items-center justify-center\\">\\n                  <div class=\\"w-8 h-8 rounded-lg bg-gradient-to-br from-blue-500 to-blue-600 p-0.5\\">\\n                    <div class=\\"w-full h-full rounded-lg bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                      <span class=\\"text-xl animate-pulse\\">⚡</span>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <!-- Yükleniyor Yazısı -->\\n              <div class=\\"mt-4 text-center\\">\\n                <h3 class=\\"text-base font-medium text-white mb-1\\">Scanning Performance</h3>\\n                <div class=\\"flex items-center justify-center gap-1 text-blue-300/70\\">\\n                  <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0s;\\"></div>\\n                  <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.2s;\\"></div>\\n                  <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.4s;\\"></div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        {:else}\\n          <!-- Result State -->\\n          <div class=\\"relative h-full p-6\\">\\n            <div class=\\"absolute inset-0 bg-gradient-to-br {steps[2].color} opacity-20\\"></div>\\n            <div class=\\"flex items-start justify-between\\">\\n              <div>\\n                <div class=\\"flex items-center gap-2 mb-2\\">\\n                  <div class=\\"w-5 h-5 rounded-full bg-white/20 flex items-center justify-center\\">\\n                    <div class=\\"w-3 h-3 rounded-full bg-white\\"></div>\\n                  </div>\\n                  <h3 class=\\"text-lg font-medium text-white/90\\">{steps[2].title}</h3>\\n                </div>\\n                <div class=\\"space-y-1\\">\\n                  <p class=\\"text-2xl font-bold text-white\\">{steps[2].description}</p>\\n                  <p class=\\"text-sm text-white/50\\">{steps[2].subtext}</p>\\n                </div>\\n              </div>\\n              <div class=\\"w-16 h-16 rounded-2xl bg-gradient-to-br {steps[2].color} p-0.5\\">\\n                <div class=\\"w-full h-full rounded-2xl bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                  <span class=\\"text-2xl\\">{steps[2].icon}</span>\\n                </div>\\n              </div>\\n            </div>\\n            <button \\n              class=\\"absolute bottom-4 right-4 px-3 py-1.5 rounded-lg bg-white/10 hover:bg-white/20 text-white/90 text-xs backdrop-blur-sm transition-all duration-300 flex items-center gap-1.5 group\\"\\n              on:click={() => openReviewModal(junkStats?.performance?.categories[0], 2)}\\n            >\\n              <span>Review</span>\\n              <svg \\n                xmlns=\\"http://www.w3.org/2000/svg\\" \\n                class=\\"w-3.5 h-3.5 transform transition-transform group-hover:translate-x-0.5\\" \\n                viewBox=\\"0 0 24 24\\" \\n                fill=\\"none\\" \\n                stroke=\\"currentColor\\" \\n                stroke-width=\\"2\\"\\n              >\\n                <path d=\\"M9 5l7 7-7 7\\" />\\n              </svg>\\n            </button>\\n          </div>\\n        {/if}\\n      </div>\\n\\n      <!-- Applications Card -->\\n      <div class=\\"relative rounded-3xl overflow-hidden backdrop-blur-sm bg-white/5\\">\\n        {#if isApplicationsScanning}\\n          <!-- Loading State -->\\n          <div class=\\"p-8\\">\\n            <div class=\\"flex flex-col items-center justify-center\\">\\n              <div class=\\"relative\\">\\n                <div class=\\"w-16 h-16 border-4 border-orange-500/20 rounded-full animate-[spin_3s_linear_infinite]\\"></div>\\n                <div class=\\"w-16 h-16 border-4 border-orange-500/20 border-t-orange-500 rounded-full animate-[spin_2s_linear_infinite] absolute inset-0\\"></div>\\n                <div class=\\"w-16 h-16 border-4 border-orange-500/20 border-t-orange-500/50 rounded-full animate-[spin_1s_linear_infinite] absolute inset-0\\"></div>\\n                \\n                <!-- Merkez İkon -->\\n                <div class=\\"absolute inset-0 flex items-center justify-center\\">\\n                  <div class=\\"w-8 h-8 rounded-lg bg-gradient-to-br from-orange-500 to-orange-600 p-0.5\\">\\n                    <div class=\\"w-full h-full rounded-lg bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                      <span class=\\"text-xl animate-pulse\\">📱</span>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <!-- Yükleniyor Yazısı -->\\n              <div class=\\"mt-4 text-center\\">\\n                <h3 class=\\"text-base font-medium text-white mb-1\\">Scanning Applications</h3>\\n                <div class=\\"flex items-center justify-center gap-1 text-orange-300/70\\">\\n                  <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0s;\\"></div>\\n                  <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.2s;\\"></div>\\n                  <div class=\\"w-1.5 h-1.5 rounded-full bg-current animate-[bounce_1s_infinite]\\" style=\\"animation-delay: 0.4s;\\"></div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        {:else}\\n          <!-- Result State -->\\n          <div class=\\"relative h-full p-6\\">\\n            <div class=\\"absolute inset-0 bg-gradient-to-br {steps[3].color} opacity-20\\"></div>\\n            <div class=\\"flex items-start justify-between\\">\\n              <div>\\n                <div class=\\"flex items-center gap-2 mb-2\\">\\n                  <div class=\\"w-5 h-5 rounded-full bg-white/20 flex items-center justify-center\\">\\n                    <div class=\\"w-3 h-3 rounded-full bg-white\\"></div>\\n                  </div>\\n                  <h3 class=\\"text-lg font-medium text-white/90\\">{steps[3].title}</h3>\\n                </div>\\n                <div class=\\"space-y-1\\">\\n                  <p class=\\"text-2xl font-bold text-white\\">{steps[3].description}</p>\\n                  <p class=\\"text-sm text-white/50\\">{steps[3].subtext}</p>\\n                </div>\\n              </div>\\n              <div class=\\"w-16 h-16 rounded-2xl bg-gradient-to-br {steps[3].color} p-0.5\\">\\n                <div class=\\"w-full h-full rounded-2xl bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n                  <span class=\\"text-2xl\\">{steps[3].icon}</span>\\n                </div>\\n              </div>\\n            </div>\\n            <button \\n              class=\\"absolute bottom-4 right-4 px-3 py-1.5 rounded-lg bg-white/10 hover:bg-white/20 text-white/90 text-xs backdrop-blur-sm transition-all duration-300 flex items-center gap-1.5 group\\"\\n              on:click={() => openReviewModal(junkStats?.applications?.categories[0], 3)}\\n            >\\n              <span>Review</span>\\n              <svg \\n                xmlns=\\"http://www.w3.org/2000/svg\\" \\n                class=\\"w-3.5 h-3.5 transform transition-transform group-hover:translate-x-0.5\\" \\n                viewBox=\\"0 0 24 24\\" \\n                fill=\\"none\\" \\n                stroke=\\"currentColor\\" \\n                stroke-width=\\"2\\"\\n              >\\n                <path d=\\"M9 5l7 7-7 7\\" />\\n              </svg>\\n            </button>\\n          </div>\\n        {/if}\\n      </div>\\n    </div>\\n  </div>\\n{/if}\\n\\n<!-- Review Modal -->\\n{#if showReviewModal}\\n  <div \\n    class=\\"fixed inset-0 bg-black/50 backdrop-blur-sm z-[70] flex items-center justify-center p-4\\"\\n    transition:fade={{ duration: 200 }}\\n    on:click|self={() => showReviewModal = false}\\n  >\\n    <div \\n      class=\\"bg-white/10 backdrop-blur-xl rounded-3xl w-full max-w-4xl max-h-[80vh] overflow-hidden shadow-2xl\\"\\n      transition:scale={{ duration: 200, start: 0.95 }}\\n    >\\n      <!-- Modal Header -->\\n      <div class=\\"p-6 border-b border-white/10 flex items-center justify-between\\">\\n        <div class=\\"flex items-center gap-4\\">\\n          <div class=\\"w-12 h-12 rounded-xl bg-gradient-to-br {selectedCategory?.color} p-0.5\\">\\n            <div class=\\"w-full h-full rounded-xl bg-black/20 backdrop-blur-xl flex items-center justify-center\\">\\n              <span class=\\"text-2xl\\">{selectedCategory?.icon}</span>\\n            </div>\\n          </div>\\n          <div>\\n            <h3 class=\\"text-xl font-bold text-white\\">{selectedCategory?.title}</h3>\\n            <p class=\\"text-white/50\\">Total size: {formatSize(selectedCategory?.size || 0)}</p>\\n          </div>\\n        </div>\\n        <button \\n          class=\\"w-8 h-8 rounded-lg bg-white/10 hover:bg-white/20 flex items-center justify-center transition-all duration-300\\"\\n          on:click={() => showReviewModal = false}\\n        >\\n          <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"w-5 h-5 text-white\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" stroke=\\"currentColor\\" stroke-width=\\"2\\">\\n            <path d=\\"M6 18L18 6M6 6l12 12\\" />\\n          </svg>\\n        </button>\\n      </div>\\n\\n      <!-- Modal Content -->\\n      <div class=\\"p-6 overflow-y-auto max-h-[calc(80vh-180px)]\\">\\n        <div class=\\"space-y-4\\">\\n          {#if selectedCategory?.categories}\\n            <div class=\\"space-y-4\\">\\n                {#each selectedCategory.categories as category}\\n                    <div class=\\"bg-white/5 rounded-xl overflow-hidden\\">\\n                        <button class=\\"w-full flex items-center justify-between p-4\\" on:click={() => category.isOpen = !category.isOpen}>\\n                            <div class=\\"flex items-center gap-3\\">\\n                                <div class=\\"w-10 h-10 rounded-lg bg-white/10 flex items-center justify-center\\">\\n                                    <span class=\\"text-xl\\">{category.icon}</span>\\n                                </div>\\n                                <div class=\\"text-left\\">\\n                                    <h4 class=\\"text-lg font-medium text-white\\">{category.name}</h4>\\n                                    <p class=\\"text-sm text-white/50\\">{category.description}</p>\\n                                </div>\\n          </div>\\n                            <div class=\\"flex items-center gap-4\\">\\n          <div class=\\"text-right\\">\\n                                    <p class=\\"text-sm font-medium text-white\\">{formatSize(category.size)}</p>\\n                                    <p class=\\"text-xs text-white/50\\">{category.file_count} items</p>\\n                                </div>\\n                                <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"w-5 h-5 text-white/50 transition-transform duration-300\\" class:rotate-180={category.isOpen} viewBox=\\"0 0 24 24\\" fill=\\"none\\" stroke=\\"currentColor\\">\\n                                    <path d=\\"M19 9l-7 7-7-7\\" />\\n                                </svg>\\n                            </div>\\n                        </button>\\n                        {#if category.isOpen}\\n                            <div class=\\"border-t border-white/5\\" transition:slide>\\n                                <div class=\\"p-4 space-y-2\\">\\n                                    <div class=\\"flex items-center justify-between py-2 px-4\\">\\n                                        <label class=\\"flex items-center gap-2\\">\\n                                            <input\\n                                                type=\\"checkbox\\"\\n                                                class=\\"w-4 h-4 rounded border-white/20 bg-white/10 text-blue-500 focus:ring-blue-500/20\\"\\n                                                checked={selectedFiles.size === category.files.length}\\n                                                on:change={() => selectAllFiles(category)}\\n                                            />\\n                                            <span class=\\"text-sm text-white/70\\">Select All</span>\\n                                        </label>\\n                                        {#if selectedFiles.size > 0}\\n                                            <button \\n                                                class=\\"px-3 py-1.5 rounded-lg bg-red-500/20 hover:bg-red-500/30 text-red-500 text-sm transition-all duration-300 flex items-center gap-2\\"\\n                                                on:click={() => confirmDelete(null, category)}\\n                                            >\\n                                                <span>Delete Selected ({selectedFiles.size})</span>\\n                                            </button>\\n                                        {/if}\\n                                    </div>\\n                                    {#each category.files as file}\\n                                        <div class=\\"flex items-center justify-between py-2 px-4 rounded-lg hover:bg-white/5\\" transition:fly={{ y: 10 }}>\\n                                            <div class=\\"flex items-center gap-3 flex-1 min-w-0\\">\\n                                                <input\\n                                                    type=\\"checkbox\\"\\n                                                    class=\\"w-4 h-4 rounded border-white/20 bg-white/10 text-blue-500 focus:ring-blue-500/20\\"\\n                                                    checked={selectedFiles.has(file.path)}\\n                                                    on:change={() => toggleFileSelection(file.path)}\\n                                                />\\n                                                <div class=\\"flex-1 min-w-0\\">\\n                                                    <p class=\\"text-sm text-white/90 truncate\\" title={file.path}>{truncatePath(file.path)}</p>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\"flex items-center gap-3 shrink-0\\">\\n                                                <p class=\\"text-sm text-white/50 whitespace-nowrap\\">{formatSize(file.size)}</p>\\n                                                <button \\n                                                    class=\\"px-2 py-1 rounded-lg bg-white/10 hover:bg-white/20 text-white/90 text-sm transition-all duration-300\\"\\n                                                    on:click={() => confirmDelete(file.path, category)}\\n                                                >\\n                                                    Delete\\n                                                </button>\\n                                            </div>\\n                                        </div>\\n                                    {/each}\\n                                </div>\\n                            </div>\\n                        {/if}\\n                    </div>\\n                {/each}\\n            </div>\\n          {/if}\\n        </div>\\n      </div>\\n\\n      <!-- Modal Footer -->\\n      <div class=\\"py-5 px-6 border-t border-white/10\\">\\n        <div class=\\"flex justify-between items-center\\">\\n          <p class=\\"text-white/50 text-base\\">{selectedCategory?.file_count || 0} items found</p>\\n          <div class=\\"flex gap-4\\">\\n            <button \\n              class=\\"px-6 py-2 rounded-xl bg-white/10 hover:bg-white/20 text-white font-medium transition-all duration-300\\"\\n              on:click={() => showReviewModal = false}\\n            >\\n              Close\\n            </button>\\n            <button \\n              class=\\"px-6 py-2 rounded-xl bg-gradient-to-r {selectedCategory?.color} hover:opacity-90 text-white font-medium transition-all duration-300\\"\\n              on:click={() => {\\n                showReviewModal = false;\\n                if (selectedCategory?.files?.length > 0) {\\n                  completeCurrentStep();\\n                }\\n              }}\\n            >\\n              Clean\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n{/if}\\n\\n<!-- Delete Confirmation Modal -->\\n{#if showDeleteConfirmModal}\\n    <div class=\\"fixed inset-0 bg-black/50 backdrop-blur-sm z-[80] flex items-center justify-center\\" transition:fade>\\n        <div class=\\"bg-gradient-to-br from-white/10 to-white/5 backdrop-blur-xl rounded-2xl p-6 max-w-md w-full mx-4\\" transition:fly={{ y: 20 }}>\\n            <div in:fly={{ y: 20 }} out:fade>\\n                <h3 class=\\"text-xl font-bold text-white mb-2\\">Delete File</h3>\\n                <p class=\\"text-white/70 mb-2\\">Are you sure you want to delete this file?</p>\\n                <p class=\\"text-white/50 text-sm mb-6 break-all\\">{fileToDelete?.name}</p>\\n                {#if deleteError}\\n                    <div class=\\"mb-6 p-4 rounded-xl bg-red-500/10 border border-red-500/20\\" transition:slide>\\n                        <p class=\\"text-red-500 text-sm\\">{deleteError}</p>\\n                    </div>\\n                {/if}\\n                <div class=\\"flex items-center justify-end gap-3\\">\\n                    <button \\n                        class=\\"px-4 py-2 rounded-xl bg-white/10 hover:bg-white/20 text-white/90 transition-all duration-300\\"\\n                        on:click={() => {\\n                            showDeleteConfirmModal = false;\\n                            deleteError = null;\\n                        }}\\n                        disabled={isDeleting}\\n                    >\\n                        Cancel\\n                    </button>\\n                    <button \\n                        class=\\"px-4 py-2 rounded-xl bg-red-500/20 hover:bg-red-500/30 text-red-500 transition-all duration-300 relative\\"\\n                        on:click={handleDelete}\\n                        disabled={isDeleting}\\n                    >\\n                        {#if isDeleting}\\n                            <div class=\\"absolute inset-0 rounded-xl bg-red-500/20 animate-pulse\\"></div>\\n                            <div class=\\"relative flex items-center gap-2\\">\\n                                <div class=\\"w-4 h-4 border-2 border-red-500/50 border-t-red-500 rounded-full animate-spin\\"></div>\\n                                <span>Deleting...</span>\\n                            </div>\\n                        {:else}\\n                            Delete\\n                        {/if}\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n{/if}\\n\\n<!-- Toast Notification -->\\n{#if deleteSuccess}\\n    <div \\n        class=\\"fixed top-4 right-4 bg-gradient-to-r from-green-500/20 to-green-600/20 backdrop-blur-xl rounded-xl p-4 shadow-lg z-[90] flex items-center gap-3\\"\\n        transition:fly={{ x: 20, duration: 300 }}\\n    >\\n        <div class=\\"w-8 h-8 rounded-full bg-green-500/20 flex items-center justify-center\\">\\n            <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"w-5 h-5 text-green-500\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" stroke=\\"currentColor\\">\\n                <path d=\\"M20 6L9 17l-5-5\\" />\\n            </svg>\\n        </div>\\n        <div>\\n            <p class=\\"text-white font-medium\\">File Deleted</p>\\n            <p class=\\"text-white/70 text-sm\\">The file has been successfully deleted.</p>\\n        </div>\\n    </div>\\n{/if}\\n\\n<!-- Remove Run Button -->\\n{#if isScanning && !scanComplete && !isCleanupScanning && !isProtectionScanning}\\n  <div class=\\"fixed bottom-8 left-1/2 -translate-x-1/2 flex items-center gap-4 z-[55]\\" in:fade={{ delay: 500 }}>\\n    <button \\n      on:click={stopScan}\\n      class=\\"w-12 h-12 bg-white/10 hover:bg-white/20 rounded-full text-white font-medium transition-all duration-300 flex items-center justify-center backdrop-blur-xl group\\"\\n    >\\n      <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"w-5 h-5\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" stroke=\\"currentColor\\" stroke-width=\\"2\\">\\n        <path d=\\"M6 18L18 6M6 6l12 12\\" />\\n      </svg>\\n    </button>\\n</div>\\n{/if}\\n\\n<style>\\n  @keyframes aurora {\\n    0% {\\n      transform: translateY(0);\\n    }\\n    100% {\\n      transform: translateY(100%);\\n    }\\n  }\\n\\n  .animate-aurora {\\n    animation: aurora 8s linear infinite;\\n  }\\n\\n  @keyframes pulse {\\n    0%, 100% {\\n      opacity: 0.4;\\n    }\\n    50% {\\n      opacity: 0.8;\\n    }\\n  }\\n\\n  .animate-pulse {\\n    animation: pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite;\\n  }\\n</style>\\n"],"names":[],"mappings":"AA+0CE,WAAW,qBAAO,CAChB,EAAG,CACD,SAAS,CAAE,WAAW,CAAC,CACzB,CACA,IAAK,CACH,SAAS,CAAE,WAAW,IAAI,CAC5B,CACF,CAEA,8BAAgB,CACd,SAAS,CAAE,qBAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAC9B,CAEA,WAAW,oBAAM,CACf,EAAE,CAAE,IAAK,CACP,OAAO,CAAE,GACX,CACA,GAAI,CACF,OAAO,CAAE,GACX,CACF,CAEA,6BAAe,CACb,SAAS,CAAE,oBAAK,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QACnD"}'},o=n((e,i,s,l)=>(e.css.add(t),'<div class="h-full flex flex-col relative"> <div class="fixed inset-0 overflow-hidden" data-svelte-h="svelte-59eoe9"><div class="absolute inset-0 bg-gradient-to-br from-purple-900 via-violet-800 to-purple-800"></div> <div class="absolute inset-0 opacity-40"><div class="absolute inset-0 bg-[radial-gradient(circle_at_50%_120%,rgba(120,0,200,0.3),rgba(120,0,200,0))] animate-pulse svelte-1d595u9"></div> <div class="absolute inset-0 bg-[radial-gradient(circle_at_50%_0%,rgba(120,0,200,0.3),rgba(120,0,200,0))] animate-pulse svelte-1d595u9" style="animation-delay: -2s;"></div> <div class="absolute w-full h-[200%] -top-full animate-aurora svelte-1d595u9"><div class="absolute inset-0 bg-gradient-to-b from-transparent via-purple-500/20 to-transparent"></div></div></div></div>  <div class="relative flex-1 flex flex-col items-center justify-center p-8"><div class="text-center mb-32" data-svelte-h="svelte-yduzq7"><h1 class="text-5xl font-bold text-white mb-4">Welcome to CleanMyMac</h1> <p class="text-xl text-white/70">Start with a quick and extensive scan of your Mac.</p></div> <button class="relative w-32 h-32 bg-white/10 hover:bg-white/20 transition-all duration-300 rounded-full flex items-center justify-center shadow-2xl group backdrop-blur-xl" data-svelte-h="svelte-15sievm"><div class="absolute inset-0 rounded-full bg-gradient-to-t from-black/20 to-transparent"></div> <span class="text-2xl font-semibold text-white group-hover:scale-110 transition-transform duration-300">Scan</span></button></div></div>          '));export{o as default};
